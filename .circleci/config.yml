# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  ci:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.9.4-stretch-browsers
        environment:
          ## this enables colors in the output
          TERM: xterm

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/redis
    steps:
      - checkout

      - run: sudo apt-get --yes install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2

      - run: node -v
      - run: npm -v

      # - run: sudo npm install -g npm@5.7.1
      # - run: npm -v

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package-lock.json" }}

      - run: npm install
      # - run: npm ci

      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      # run Prettier
      - run: npm run format

      # run ESLint and Stylelint
      - run: npm run lint

      # run Flow
      - run: npm run type-check

      # run Jest
      - run: npm test

      # run build
      - run: npm run build
      - run: npm run styleguide:build

      - run: ls -hal

      # run Cypress
      - run: npm run e2e

      # run Lighthouse
      - run: npm run benchmark

      # Persist the specified paths into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is taken to be the root directory of the workspace.
          root: ./
          # Must be relative path from root
          paths:
            - dist

  cd:
    docker:
      - image: circleci/node:stretch
    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./

      - run: ls -hal

      # deploy to Heroku
      - run:
          name: Deploy Master to Heroku
          command: |  # this command is framework-dependent and may vary
            git config user.email "circleci@localhost"
            git config user.name "CircleCI"
            git add -f dist
            git status
            git commit -m "deploy to production"
            git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git HEAD:refs/heads/master

workflows:
  version: 2
  ci-cd:
    jobs:
      - ci
      - cd:
          requires:
            - ci
          filters:
            branches:
              only: master
